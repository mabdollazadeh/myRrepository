x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y~x)
summary(fit)$coefficients
# 1- 0.05296
n <- length(y)
beta1 <- cor(y, x) * sd(y) / sd(x)
beta0 <- mean(y) - beta1 * mean(x)
e <- y - beta0 - beta1 * x
sigma <- sqrt(sum(e^2) / (n-2))
#2- 0.223
3- -6.486
	y <- mtcars$mpg; x <- mtcars$wt; n <- length(y)
	sumCoef <- summary(lm(y~x))$coefficients
	sumCoef[2,1] + c(-1, 1) * qt(.975, df = lm(y~x)$df) * sumCoef[2, 2]
4- The estimated expected change in mpg per 1,000 lb increase in weight.
5- 27.57 
	x0<-3
	y0<- beta0+beta1*x0
	ssx <- sum((x - mean(x))^2)
	se0 <- sigma*sqrt(1+(1/n)+(x0-mean(x))^2/ssx)
	y0+qt(0.975,n-2)*se0
6-  -12.973
	fit <- lm(y~x)
	sumCoef <- summary(fit)$coefficients
	2*(sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2])
7- It would get multiplied by 100
8- The new intercept would be β^0−cβ^1
9- 0.25 sum(resid(fit)^2 )/sum((y-mean(y))^2)
10- If an intercept is included, then they will sum to 0

